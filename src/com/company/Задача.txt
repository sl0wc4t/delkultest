Описание задачи
Существует два потока(thread) - writer и reader. Writer должен дописывать в конец
randoms случайное число случайных чисел, Reader должен считывать из randoms
все числа и удалять их оттуда, выводя при этом их на печать
Требования к задаче
 Требуется обеспечить потокобезопасность данных
 Потоки должны работать строго последовательно, и не должно быть ситуаций,
когда один поток отрабатывал бы несколько раз подряд, а другой простаивал.
Должна быть соблюдена четкая очередность работы потоков в порядке: write –
read – write – read - write – read
 Требуется доработать программу таким образом, чтобы исходная задача была
выполнена.
 Желательные условия: дополнительным плюсом будет считаться реализация
всех инфраструктурных подсистем, таких как логирование и чтение
параметров из файлов конфигурации, не забывайте про тесты ;)
 Решение задачи необходимо отправить ссылкой на опубликованный проект на
github.com
class Test {
private static final List&lt;Integer&gt;randoms;
private static final Thread writer = new Thread(() -&gt; {
});
private static final Thread reader = new Thread(() -&gt; {
});
public static void main (String[] args) throws Exception {
reader.setDaemon(true);
writer.setDaemon(true);
writer.start();
reader.start();
Thread.sleep(5000);
}
}